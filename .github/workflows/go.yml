# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Sprint CI/CD

on:
  push

jobs:
  lint:
    runs-on: ubuntu-latest
    container: golang:1.22
    steps:
      - uses: actions/checkout@v4

      - name: Vet
        run: |
          go vet ./...

  test:
    runs-on: ubuntu-latest
    container: golang:1.22
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Run Unit Tests
        run: GOOS=linux GOARCH=amd64 go test

  deploy:
    name: Push Docker image
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags') && github.ref == 'refs/tags/v1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker build
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: shtainbook/final-main:v1

      - name: Build and push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

